diff --git a/index.js b/index.js
index a22558e5c0b2779ac875d14288f8d67c22889839..1279abc6099fe37cbab1722372b8b2bf674bf78a 100644
--- a/index.js
+++ b/index.js
@@ -5,6 +5,7 @@ const { ValidationError } = require("@lerna/validation-error");
 const { CyclicPackageGraphNode } = require("./lib/cyclic-package-graph-node");
 const { PackageGraphNode } = require("./lib/package-graph-node");
 const { reportCycles } = require("./lib/report-cycles");
+const { Project } = require("@lerna/project");
 
 /** @typedef {import("./lib/package-graph-node").PackageGraphNode} PackageGraphNode */
 
@@ -24,6 +25,10 @@ class PackageGraph extends Map {
   constructor(packages, graphType = "allDependencies", forceLocal) {
     super(packages.map((pkg) => [pkg.name, new PackageGraphNode(pkg)]));
 
+    const project = new Project()
+    const allPackages = project.getPackagesSync()
+    const allPackagesMap = new Map(allPackages.map((pkg) => [pkg.name, new PackageGraphNode(pkg)]));
+
     if (packages.length !== this.size) {
       // weed out the duplicates
       const seen = new Map();
@@ -77,7 +82,7 @@ class PackageGraph extends Map {
           if (spec === "*" || spec === "^" || spec === "~") {
             workspaceAlias = spec;
             const prefix = spec === "*" ? "" : spec;
-            const version = depNode.version;
+            const version = depNode ? depNode.version : allPackagesMap.get(depName).version;
             spec = `${prefix}${version}`;
           }
         }
